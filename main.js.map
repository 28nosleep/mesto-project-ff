{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js","webpack://mesto-project-ff/./src/components/card.js"],"sourcesContent":["// modal.js\n\n// Функция для открытия модального окна\nexport function openModal(modal) {\n  modal.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", handleEscKey);\n  modal.addEventListener(\"mousedown\", handleOverlayClick);\n}\n\n// Функция для закрытия модального окна\nexport function closeModal(modal) {\n  modal.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", handleEscKey);\n  modal.removeEventListener(\"mousedown\", handleOverlayClick);\n}\n\n// Обработчик нажатия клавиши Esc\nfunction handleEscKey(event) {\n  if (event.key === \"Escape\") {\n    const openedPopup = document.querySelector(\".popup_is-opened\");\n    if (openedPopup) {\n      closeModal(openedPopup);\n    }\n  }\n}\n\n// Обработчик клика на оверлей\nfunction handleOverlayClick(event) {\n  if (event.target === event.currentTarget) {\n    closeModal(event.target);\n  }\n}\n\n// Функция для установки слушателей на все попапы\nexport function setEventListeners() {\n  const popups = document.querySelectorAll('.popup');\n  popups.forEach((popup) => {\n    popup.addEventListener('mousedown', (evt) => {\n      if (evt.target.classList.contains('popup_is-opened')) {\n        closeModal(popup);\n      }\n      if (evt.target.classList.contains('popup__close')) {\n        closeModal(popup);\n      }\n    });\n  });\n}","//validation\n\n// Функция для показа ошибки валидации\nfunction showInputError(formElement, inputElement, errorMessage, config) {\n  const errorElement = formElement.querySelector(\n    `.popup__input-error_type_${inputElement.name}`\n  );\n  if (errorElement) {\n    inputElement.classList.add(config.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(config.errorClass);\n  }\n}\n\n// Функция для скрытия ошибки валидации\nfunction hideInputError(formElement, inputElement, config) {\n  const errorElement = formElement.querySelector(\n    `.popup__input-error_type_${inputElement.name}`\n  );\n  if (errorElement) {\n    inputElement.classList.remove(config.inputErrorClass);\n    errorElement.classList.remove(config.errorClass);\n    errorElement.textContent = \"\";\n  }\n}\n\n// Функция для склонения слов\nfunction declOfNum(number, words) {\n  return words[\n    number % 100 > 4 && number % 100 < 20\n      ? 2\n      : [2, 0, 1, 1, 1, 2][number % 10 < 5 ? number % 10 : 5]\n  ];\n}\n\n// Функция проверки валидности поля ввода\nfunction checkInputValidity(formElement, inputElement, config) {\n  if (!inputElement.validity.valid) {\n    let errorMessage;\n\n    if (inputElement.validity.valueMissing) {\n      errorMessage = \"Вы пропустили это поле.\";\n    } else if (\n      inputElement.validity.typeMismatch &&\n      inputElement.type === \"url\"\n    ) {\n      errorMessage = \"Введите адрес сайта.\";\n    } else if (inputElement.validity.tooShort) {\n      const wordForms = [\"символ\", \"символа\", \"символов\"];\n      const word = declOfNum(inputElement.value.length, wordForms);\n      errorMessage = `Минимальное количество символов: ${inputElement.minLength}. Длина текста сейчас: ${inputElement.value.length} ${word}.`;\n    } else if (inputElement.validity.tooLong) {\n      const wordForms = [\"символ\", \"символа\", \"символов\"];\n      const word = declOfNum(inputElement.value.length, wordForms);\n      errorMessage = `Максимальное количество символов: ${inputElement.maxLength}. Длина текста сейчас: ${inputElement.value.length} ${word}.`;\n    } else if (inputElement.validity.patternMismatch) {\n      errorMessage =\n        \"Разрешены только латинские и кириллические буквы, знаки дефиса и пробелы.\";\n    } else {\n      errorMessage = inputElement.validationMessage;\n    }\n\n    showInputError(formElement, inputElement, errorMessage, config);\n  } else {\n    hideInputError(formElement, inputElement, config);\n  }\n}\n\n// Функция установки слушателей событий на поля формы\nfunction setEventListeners(formElement, config) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(config.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n\n  toggleButtonState(inputList, buttonElement, config);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", function () {\n      checkInputValidity(formElement, inputElement, config);\n      toggleButtonState(inputList, buttonElement, config);\n    });\n  });\n}\n\n// Функция переключения состояния кнопки отправки формы\nfunction toggleButtonState(inputList, buttonElement, config) {\n  const isFormValid = inputList.every(\n    (inputElement) => inputElement.validity.valid\n  );\n  buttonElement.classList.toggle(config.inactiveButtonClass, !isFormValid);\n  buttonElement.disabled = !isFormValid;\n}\n\n// Функция включения валидации форм\nexport function enableValidation(config) {\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\n  formList.forEach((formElement) => {\n    formElement.addEventListener(\"submit\", function (evt) {\n      evt.preventDefault();\n    });\n\n    setEventListeners(formElement, config);\n  });\n}\n\n// Функция очистки ошибок валидации\nexport function clearValidation(formElement, config) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(config.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, config);\n  });\n\n  toggleButtonState(inputList, buttonElement, config);\n}\n","const config = {\n  baseUrl: \"https://mesto.nomoreparties.co/v1/wff-cohort-18\",\n  headers: {\n    authorization: \"a9fef10b-6805-482a-8209-4e6642683fc7\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n// Получение информации о пользователе\nexport function getUserInfo() {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then(checkResponse);\n}\n\n// Обновление информации о пользователе\nexport function updateUserProfile(name, about) {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name,\n      about,\n    }),\n  }).then(checkResponse);\n}\n\n// Получение начальных карточек\nexport function getInitialCards() {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then(checkResponse);\n}\n\n// Добавление новой карточки\nexport function addNewCard(name, link) {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name,\n      link,\n    }),\n  }).then(checkResponse);\n}\n\n// Удаление карточки\nexport function deleteCard(cardId) {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(checkResponse);\n}\n\n// Добавление лайка\nexport function addLike(cardId) {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then(checkResponse);\n}\n\n// Удаление лайка\nexport function removeLike(cardId) {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(checkResponse);\n}\n\n// Обновление аватара пользователя\nexport function updateAvatar(avatarLink) {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarLink,\n    }),\n  }).then(checkResponse);\n}","import \"../pages/index.css\";\nimport { createCard } from \"../components/card.js\";\nimport { openModal, closeModal } from \"../components/modal.js\";\nimport { enableValidation, clearValidation } from \"./validation.js\";\nimport {\n  getInitialCards,\n  getUserInfo,\n  updateUserProfile,\n  addNewCard,\n  deleteCard as deleteCardApi,\n  addLike,\n  removeLike,\n  updateAvatar,\n} from \"./api.js\";\n\n// DOM-элементы\nconst placesList = document.querySelector(\".places__list\");\nconst editProfileForm = document.querySelector(\".popup_type_edit .popup__form\");\nconst newCardForm = document.querySelector(\".popup_type_new-card .popup__form\");\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\nconst newCardAddButton = document.querySelector(\".profile__add-button\");\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst imagePopup = document.querySelector(\".popup_type_image\");\nconst imageElement = imagePopup.querySelector(\".popup__image\");\nconst captionElement = imagePopup.querySelector(\".popup__caption\");\nconst deleteConfirmPopup = document.querySelector(\".popup_type_confirm\");\nconst avatarEditButton = document.querySelector(\".profile__avatar-button\");\nconst avatarEditForm = document.querySelector(\".popup_type_avatar .popup__form\");\nconst profileAvatar = document.querySelector(\".profile__image\");\n\n// Глобальные переменные\nlet currentUserId;\n\n// Объект конфигурации для валидации форм\nconst validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\n// Функция для обработки клика по изображению карточки\nfunction handleImageClick(cardData) {\n  imageElement.src = cardData.link;\n  imageElement.alt = cardData.name;\n  captionElement.textContent = cardData.name;\n  openModal(imagePopup);\n}\n\n// Функция для обработки отправки формы редактирования профиля\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n  const nameInput = editProfileForm.querySelector(\".popup__input_type_name\");\n  const jobInput = editProfileForm.querySelector(\".popup__input_type_description\");\n  const submitButton = editProfileForm.querySelector(\".popup__button\");\n  const originalButtonText = submitButton.textContent;\n\n  submitButton.textContent = \"Сохранение...\";\n  submitButton.disabled = true;\n\n  updateUserProfile(nameInput.value, jobInput.value)\n    .then((updatedUser) => {\n      profileTitle.textContent = updatedUser.name;\n      profileDescription.textContent = updatedUser.about;\n      closeModal(evt.target.closest(\".popup\"));\n    })\n    .catch((err) => {\n      console.error(`Ошибка при обновлении профиля: ${err}`);\n    })\n    .finally(() => {\n      submitButton.textContent = originalButtonText;\n      submitButton.disabled = false;\n      clearValidation(evt.target, validationConfig);\n    });\n}\n\n// Функция для обработки отправки формы добавления новой карточки\nfunction handleNewCardFormSubmit(evt) {\n  evt.preventDefault();\n  const nameInput = newCardForm.querySelector(\".popup__input_type_card-name\");\n  const linkInput = newCardForm.querySelector(\".popup__input_type_url\");\n  const submitButton = newCardForm.querySelector(\".popup__button\");\n  const originalButtonText = submitButton.textContent;\n\n  submitButton.textContent = \"Сохранение...\";\n  submitButton.disabled = true;\n\n  addNewCard(nameInput.value, linkInput.value)\n    .then((newCardData) => {\n      const newCard = createCardElement(newCardData);\n      placesList.prepend(newCard);\n      evt.target.reset();\n      closeModal(evt.target.closest(\".popup\"));\n    })\n    .catch((err) => {\n      console.error(`Ошибка при добавлении новой карточки: ${err}`);\n    })\n    .finally(() => {\n      submitButton.textContent = originalButtonText;\n      submitButton.disabled = false;\n      clearValidation(evt.target, validationConfig);\n    });\n}\n\n// Функция для открытия попапа подтверждения удаления карточки\nfunction openDeleteConfirmPopup(cardElement, cardId) {\n  const confirmButton = deleteConfirmPopup.querySelector(\".popup__button_type_confirm\");\n  const cancelButton = deleteConfirmPopup.querySelector(\".popup__button_type_cancel\");\n  const originalButtonText = confirmButton.textContent;\n\n  function confirmDelete() {\n    confirmButton.textContent = \"Удаление...\";\n    confirmButton.disabled = true;\n\n    deleteCardApi(cardId)\n      .then(() => {\n        cardElement.remove();\n        closeModal(deleteConfirmPopup);\n      })\n      .catch((err) => {\n        console.error(`Ошибка при удалении карточки: ${err}`);\n      })\n      .finally(() => {\n        confirmButton.textContent = originalButtonText;\n        confirmButton.disabled = false;\n        removeListeners();\n      });\n  }\n\n  function cancelDelete() {\n    closeModal(deleteConfirmPopup);\n    removeListeners();\n  }\n\n  function handleOverlayClick(event) {\n    if (event.target === deleteConfirmPopup) {\n      closeModal(deleteConfirmPopup);\n      removeListeners();\n    }\n  }\n\n  function removeListeners() {\n    confirmButton.removeEventListener(\"click\", confirmDelete);\n    cancelButton.removeEventListener(\"click\", cancelDelete);\n    deleteConfirmPopup.removeEventListener(\"mousedown\", handleOverlayClick);\n    deleteConfirmPopup.querySelector(\".popup__close\").removeEventListener(\"click\", handleCloseClick);\n  }\n\n  function handleCloseClick() {\n    closeModal(deleteConfirmPopup);\n    removeListeners();\n  }\n\n  // Удаляем предыдущие обработчики событий, если они есть\n  removeListeners();\n\n  // Добавляем новые обработчики событий\n  confirmButton.addEventListener(\"click\", confirmDelete);\n  cancelButton.addEventListener(\"click\", cancelDelete);\n  deleteConfirmPopup.addEventListener(\"mousedown\", handleOverlayClick);\n  deleteConfirmPopup.querySelector(\".popup__close\").addEventListener(\"click\", handleCloseClick);\n\n  openModal(deleteConfirmPopup);\n}\n\n// Функция для обработки удаления карточки\nfunction handleDeleteCard(cardElement, cardId) {\n  openDeleteConfirmPopup(cardElement, cardId);\n}\n\n// Функция для обработки лайка карточки\nfunction handleLikeCard(cardElement, cardId) {\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCounter = cardElement.querySelector(\".card__like-counter\");\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\n\n  const likeAction = isLiked ? removeLike : addLike;\n\n  likeAction(cardId)\n    .then((updatedCard) => {\n      likeButton.classList.toggle(\"card__like-button_is-active\");\n      likeCounter.textContent = updatedCard.likes.length;\n    })\n    .catch((err) => {\n      console.error(`Ошибка при обновлении лайка: ${err}`);\n    });\n}\n\n// Функция для обработки отправки формы обновления аватара\nfunction handleAvatarFormSubmit(evt) {\n  evt.preventDefault();\n  const linkInput = avatarEditForm.querySelector(\".popup__input_type_avatar-url\");\n  const submitButton = avatarEditForm.querySelector(\".popup__button\");\n  const originalButtonText = submitButton.textContent;\n\n  submitButton.textContent = \"Сохранение...\";\n  submitButton.disabled = true;\n\n  updateAvatar(linkInput.value)\n    .then((updatedUser) => {\n      profileAvatar.src = updatedUser.avatar;\n      closeModal(evt.target.closest(\".popup\"));\n    })\n    .catch((err) => {\n      console.error(`Ошибка при обновлении аватара: ${err}`);\n    })\n    .finally(() => {\n      submitButton.textContent = originalButtonText;\n      submitButton.disabled = false;\n      clearValidation(evt.target, validationConfig);\n    });\n}\n\n// Функция для обработки кликов по карточкам\nfunction handleCardClick(event) {\n  const card = event.target.closest(\".card\");\n  if (!card) return;\n\n  if (event.target.classList.contains(\"card__delete-button\")) {\n    handleDeleteCard(card, card.dataset.cardId);\n  } else if (event.target.classList.contains(\"card__like-button\")) {\n    handleLikeCard(card, card.dataset.cardId);\n  } else if (event.target.classList.contains(\"card__image\")) {\n    const cardData = {\n      name: card.querySelector(\".card__title\").textContent,\n      link: event.target.src\n    };\n    handleImageClick(cardData);\n  }\n}\n\n// Функция для настройки обработчиков событий\nfunction setupEventListeners() {\n  newCardAddButton.addEventListener(\"click\", () => {\n    newCardForm.reset();\n    clearValidation(newCardForm, validationConfig);\n    openModal(newCardForm.closest(\".popup\"));\n  });\n\n  profileEditButton.addEventListener(\"click\", () => {\n    const nameInput = editProfileForm.querySelector(\".popup__input_type_name\");\n    const jobInput = editProfileForm.querySelector(\".popup__input_type_description\");\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n    clearValidation(editProfileForm, validationConfig);\n    openModal(editProfileForm.closest(\".popup\"));\n  });\n\n  avatarEditButton.addEventListener(\"click\", () => {\n    avatarEditForm.reset();\n    clearValidation(avatarEditForm, validationConfig);\n    openModal(avatarEditForm.closest(\".popup\"));\n  });\n\n  document.addEventListener(\"click\", (event) => {\n    if (event.target.classList.contains(\"popup_opened\") || \n        event.target.classList.contains(\"popup__close\")) {\n      closeModal(event.target.closest(\".popup\"));\n    }\n  });\n\n  editProfileForm.addEventListener(\"submit\", handleProfileFormSubmit);\n  newCardForm.addEventListener(\"submit\", handleNewCardFormSubmit);\n  avatarEditForm.addEventListener(\"submit\", handleAvatarFormSubmit);\n  placesList.addEventListener(\"click\", handleCardClick);\n}\n\n// Функция для отрисовки карточек\nfunction renderCards(cards) {\n  cards.forEach((cardData) => {\n    const cardElement = createCardElement(cardData);\n    placesList.appendChild(cardElement);\n  });\n}\n\n// Функция создания карточки\nfunction createCardElement(cardData) {\n  const card = createCard(\n    cardData,\n    handleDeleteCard,\n    handleLikeCard,\n    handleImageClick,\n    currentUserId\n  );\n  card.dataset.cardId = cardData._id;\n  return card;\n}\n\n// Инициализация приложения\nfunction initializeApp() {\n  document.querySelectorAll(\".popup\").forEach((popup) => {\n    popup.classList.add(\"popup_is-animated\");\n  });\n\n  setupEventListeners();\n  enableValidation(validationConfig);\n\n  Promise.all([getUserInfo(), getInitialCards()])\n    .then(([userData, cards]) => {\n      currentUserId = userData._id;\n      profileTitle.textContent = userData.name;\n      profileDescription.textContent = userData.about;\n      profileAvatar.src = userData.avatar;\n      renderCards(cards);\n    })\n    .catch((err) => {\n      console.error(`Ошибка при инициализации приложения: ${err}`);\n    });\n}\n\n// Запуск инициализации после загрузки DOM\ndocument.addEventListener(\"DOMContentLoaded\", initializeApp);","// card.js\n\nfunction createCard(\n  cardData,\n  deleteCallback,\n  likeCallback,\n  imageClickCallback,\n  userId\n) {\n  const cardTemplate = document.querySelector(\"#card-template\").content;\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCounter = cardElement.querySelector(\".card__like-counter\");\n\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  cardTitle.textContent = cardData.name;\n  likeCounter.textContent = cardData.likes.length;\n\n  if (cardData.owner._id !== userId) {\n    deleteButton.remove();\n  } else {\n    deleteButton.addEventListener(\"click\", () =>\n      deleteCallback(cardElement, cardData._id)\n    );\n  }\n\n  likeButton.classList.toggle(\n    \"card__like-button_is-active\",\n    cardData.likes.some((like) => like._id === userId)\n  );\n  likeButton.addEventListener(\"click\", () =>\n    likeCallback(cardElement, cardData._id)\n  );\n  cardImage.addEventListener(\"click\", () => imageClickCallback(cardData));\n\n  return cardElement;\n}\n\nexport { createCard };\n"],"names":["openModal","modal","classList","add","document","addEventListener","handleEscKey","handleOverlayClick","closeModal","remove","removeEventListener","event","key","openedPopup","querySelector","target","currentTarget","hideInputError","formElement","inputElement","config","errorElement","concat","name","inputErrorClass","errorClass","textContent","declOfNum","number","words","toggleButtonState","inputList","buttonElement","isFormValid","every","validity","valid","toggle","inactiveButtonClass","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","status","addLike","cardId","fetch","method","then","removeLike","currentUserId","placesList","editProfileForm","newCardForm","profileEditButton","newCardAddButton","profileTitle","profileDescription","imagePopup","imageElement","captionElement","deleteConfirmPopup","avatarEditButton","avatarEditForm","profileAvatar","validationConfig","formSelector","handleImageClick","cardData","src","link","alt","handleProfileFormSubmit","evt","preventDefault","about","nameInput","jobInput","submitButton","originalButtonText","value","body","JSON","stringify","updatedUser","closest","catch","err","console","error","finally","handleNewCardFormSubmit","linkInput","newCardData","newCard","createCardElement","prepend","reset","handleDeleteCard","cardElement","confirmButton","cancelButton","confirmDelete","deleteCardApi","removeListeners","cancelDelete","handleCloseClick","openDeleteConfirmPopup","handleLikeCard","likeButton","likeCounter","contains","updatedCard","likes","length","handleAvatarFormSubmit","avatarLink","avatar","handleCardClick","card","dataset","deleteCallback","likeCallback","imageClickCallback","userId","content","cloneNode","cardImage","cardTitle","deleteButton","owner","_id","some","like","createCard","popup","errorMessage","valueMissing","typeMismatch","type","tooShort","word","minLength","tooLong","maxLength","patternMismatch","validationMessage","showInputError","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","userData","cards","appendChild","renderCards"],"sourceRoot":""}