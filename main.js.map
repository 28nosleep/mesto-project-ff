{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js","webpack://mesto-project-ff/./src/components/card.js"],"sourcesContent":["//modal\n\n// Функция для открытия модального окна\nexport function openModal(modal) {\n  modal.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", handleEscKey);\n}\n\n// Функция для закрытия модального окна\nexport function closeModal(modal) {\n  modal.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", handleEscKey);\n}\n\n// Обработчик нажатия клавиши Esc\nfunction handleEscKey(event) {\n  if (event.key === \"Escape\") {\n    const openedPopup = document.querySelector(\".popup_is-opened\");\n    if (openedPopup) {\n      closeModal(openedPopup);\n    }\n  }\n}\n","//validation\n\n// Функция для показа ошибки валидации\nfunction showInputError(formElement, inputElement, errorMessage, config) {\n  const errorElement = formElement.querySelector(\n    `.popup__input-error_type_${inputElement.name}`\n  );\n  if (errorElement) {\n    inputElement.classList.add(config.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(config.errorClass);\n  }\n}\n\n// Функция для скрытия ошибки валидации\nfunction hideInputError(formElement, inputElement, config) {\n  const errorElement = formElement.querySelector(\n    `.popup__input-error_type_${inputElement.name}`\n  );\n  if (errorElement) {\n    inputElement.classList.remove(config.inputErrorClass);\n    errorElement.classList.remove(config.errorClass);\n    errorElement.textContent = \"\";\n  }\n}\n\n// Функция для склонения слов\nfunction declOfNum(number, words) {\n  return words[\n    number % 100 > 4 && number % 100 < 20\n      ? 2\n      : [2, 0, 1, 1, 1, 2][number % 10 < 5 ? number % 10 : 5]\n  ];\n}\n\n// Функция проверки валидности поля ввода\nfunction checkInputValidity(formElement, inputElement, config) {\n  if (!inputElement.validity.valid) {\n    let errorMessage;\n\n    if (inputElement.validity.valueMissing) {\n      errorMessage = \"Вы пропустили это поле.\";\n    } else if (\n      inputElement.validity.typeMismatch &&\n      inputElement.type === \"url\"\n    ) {\n      errorMessage = \"Введите адрес сайта.\";\n    } else if (inputElement.validity.tooShort) {\n      const wordForms = [\"символ\", \"символа\", \"символов\"];\n      const word = declOfNum(inputElement.value.length, wordForms);\n      errorMessage = `Минимальное количество символов: ${inputElement.minLength}. Длина текста сейчас: ${inputElement.value.length} ${word}.`;\n    } else if (inputElement.validity.tooLong) {\n      const wordForms = [\"символ\", \"символа\", \"символов\"];\n      const word = declOfNum(inputElement.value.length, wordForms);\n      errorMessage = `Максимальное количество символов: ${inputElement.maxLength}. Длина текста сейчас: ${inputElement.value.length} ${word}.`;\n    } else if (inputElement.validity.patternMismatch) {\n      errorMessage =\n        \"Разрешены только латинские и кириллические буквы, знаки дефиса и пробелы.\";\n    } else {\n      errorMessage = inputElement.validationMessage;\n    }\n\n    showInputError(formElement, inputElement, errorMessage, config);\n  } else {\n    hideInputError(formElement, inputElement, config);\n  }\n}\n\n// Функция установки слушателей событий на поля формы\nfunction setEventListeners(formElement, config) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(config.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n\n  toggleButtonState(inputList, buttonElement, config);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", function () {\n      checkInputValidity(formElement, inputElement, config);\n      toggleButtonState(inputList, buttonElement, config);\n    });\n  });\n}\n\n// Функция переключения состояния кнопки отправки формы\nfunction toggleButtonState(inputList, buttonElement, config) {\n  const isFormValid = inputList.every(\n    (inputElement) => inputElement.validity.valid\n  );\n  buttonElement.classList.toggle(config.inactiveButtonClass, !isFormValid);\n  buttonElement.disabled = !isFormValid;\n}\n\n// Функция включения валидации форм\nexport function enableValidation(config) {\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\n  formList.forEach((formElement) => {\n    formElement.addEventListener(\"submit\", function (evt) {\n      evt.preventDefault();\n    });\n\n    setEventListeners(formElement, config);\n  });\n}\n\n// Функция очистки ошибок валидации\nexport function clearValidation(formElement, config) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(config.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, config);\n  });\n\n  toggleButtonState(inputList, buttonElement, config);\n}\n","const config = {\n  baseUrl: \"https://mesto.nomoreparties.co/v1/wff-cohort-18\",\n  headers: {\n    authorization: \"a9fef10b-6805-482a-8209-4e6642683fc7\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n// Получение информации о пользователе\nexport function getUserInfo() {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n}\n\n// Обновление информации о пользователе\nexport function updateUserProfile(name, about) {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name,\n      about,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n}\n\n// Получение начальных карточек\nexport function getInitialCards() {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n}\n\n// Добавление новой карточки\nexport function addNewCard(name, link) {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name,\n      link,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n}\n\n// Удаление карточки\nexport function deleteCard(cardId) {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n}\n\n// Добавление лайка\nexport function addLike(cardId) {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n}\n\n// Удаление лайка\nexport function removeLike(cardId) {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n}\n\n// Обновление аватара пользователя\nexport function updateAvatar(avatarLink) {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarLink,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n}\n","import \"../pages/index.css\";\nimport { createCard, handleLikeButton } from \"../components/card.js\";\nimport { openModal, closeModal } from \"../components/modal.js\";\nimport { enableValidation, clearValidation } from \"./validation.js\";\nimport {\n  getInitialCards,\n  getUserInfo,\n  updateUserProfile,\n  addNewCard,\n  deleteCard as deleteCardApi,\n  addLike,\n  removeLike,\n  updateAvatar,\n} from \"./api.js\";\n\n// DOM-элементы\nconst placesList = document.querySelector(\".places__list\");\nconst editProfileForm = document.querySelector(\".popup_type_edit .popup__form\");\nconst newCardForm = document.querySelector(\".popup_type_new-card .popup__form\");\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\nconst newCardAddButton = document.querySelector(\".profile__add-button\");\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst imagePopup = document.querySelector(\".popup_type_image\");\nconst imageElement = imagePopup.querySelector(\".popup__image\");\nconst captionElement = imagePopup.querySelector(\".popup__caption\");\nconst deleteConfirmPopup = document.querySelector(\".popup_type_confirm\");\nconst avatarEditButton = document.querySelector(\".profile__avatar-button\");\nconst avatarEditForm = document.querySelector(\n  \".popup_type_avatar .popup__form\"\n);\nconst profileAvatar = document.querySelector(\".profile__image\");\n\n// Глобальные переменные\nlet currentUserId;\n\n// Объект конфигурации для валидации форм\nconst validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\n// Функция для обработки клика по изображению карточки\nfunction handleImageClick(cardData) {\n  imageElement.src = cardData.link;\n  imageElement.alt = cardData.name;\n  captionElement.textContent = cardData.name;\n  openModal(imagePopup);\n}\n\n// Функция для обработки отправки формы редактирования профиля\n// Функция для обработки отправки формы редактирования профиля\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n  const nameInput = editProfileForm.querySelector(\".popup__input_type_name\");\n  const jobInput = editProfileForm.querySelector(\n    \".popup__input_type_description\"\n  );\n  const submitButton = editProfileForm.querySelector(\".popup__button\");\n  const originalButtonText = submitButton.textContent;\n\n  submitButton.textContent = \"Сохранение...\";\n  submitButton.disabled = true;\n\n  updateUserProfile(nameInput.value, jobInput.value)\n    .then((updatedUser) => {\n      profileTitle.textContent = updatedUser.name;\n      profileDescription.textContent = updatedUser.about;\n      closeModal(evt.target.closest(\".popup\"));\n    })\n    .catch((err) => {\n      console.error(`Ошибка при обновлении профиля: ${err}`);\n    })\n    .finally(() => {\n      submitButton.textContent = originalButtonText;\n      submitButton.disabled = false;\n      clearValidation(evt.target, validationConfig);\n    });\n}\n\n// Функция для обработки отправки формы добавления новой карточки\nfunction handleNewCardFormSubmit(evt) {\n  evt.preventDefault();\n  const nameInput = newCardForm.querySelector(\".popup__input_type_card-name\");\n  const linkInput = newCardForm.querySelector(\".popup__input_type_url\");\n  const submitButton = newCardForm.querySelector(\".popup__button\");\n  const originalButtonText = submitButton.textContent;\n\n  submitButton.textContent = \"Сохранение...\";\n  submitButton.disabled = true;\n\n  addNewCard(nameInput.value, linkInput.value)\n    .then((newCardData) => {\n      const newCard = createCardElement(newCardData);\n      placesList.prepend(newCard);\n      evt.target.reset();\n      closeModal(evt.target.closest(\".popup\"));\n    })\n    .catch((err) => {\n      console.error(`Ошибка при добавлении новой карточки: ${err}`);\n    })\n    .finally(() => {\n      submitButton.textContent = originalButtonText;\n      submitButton.disabled = false;\n      clearValidation(evt.target, validationConfig);\n    });\n}\n\n// Функция для обработки удаления карточки\nfunction handleDeleteCard(cardElement, cardId) {\n  const confirmButton = deleteConfirmPopup.querySelector(\n    \".popup__button_type_confirm\"\n  );\n  const cancelButton = deleteConfirmPopup.querySelector(\n    \".popup__button_type_cancel\"\n  );\n  const originalButtonText = confirmButton.textContent;\n\n  function confirmDelete() {\n    confirmButton.textContent = \"Удаление...\";\n    confirmButton.disabled = true;\n\n    deleteCardApi(cardId)\n      .then(() => {\n        cardElement.remove();\n        closeModal(deleteConfirmPopup);\n      })\n      .catch((err) => {\n        console.error(`Ошибка при удалении карточки: ${err}`);\n      })\n      .finally(() => {\n        confirmButton.textContent = originalButtonText;\n        confirmButton.disabled = false;\n      });\n  }\n\n  function cancelDelete() {\n    closeModal(deleteConfirmPopup);\n  }\n\n  openModal(deleteConfirmPopup);\n\n  confirmButton.addEventListener(\"click\", confirmDelete, { once: true });\n  cancelButton.addEventListener(\"click\", cancelDelete, { once: true });\n}\n\n// Функция для обработки лайка карточки\nfunction handleLikeCard(cardElement, cardId) {\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCounter = cardElement.querySelector(\".card__like-counter\");\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\n\n  const likeAction = isLiked ? removeLike : addLike;\n\n  likeAction(cardId)\n    .then((updatedCard) => {\n      likeButton.classList.toggle(\"card__like-button_is-active\");\n      likeCounter.textContent = updatedCard.likes.length;\n    })\n    .catch((err) => {\n      console.error(`Ошибка при обновлении лайка: ${err}`);\n    });\n}\n\n// Функция для обработки отправки формы обновления аватара\nfunction handleAvatarFormSubmit(evt) {\n  evt.preventDefault();\n  const linkInput = avatarEditForm.querySelector(\n    \".popup__input_type_avatar-url\"\n  );\n  const submitButton = avatarEditForm.querySelector(\".popup__button\");\n  const originalButtonText = submitButton.textContent;\n\n  submitButton.textContent = \"Сохранение...\";\n  submitButton.disabled = true;\n\n  updateAvatar(linkInput.value)\n    .then((updatedUser) => {\n      profileAvatar.style.backgroundImage = `url(${updatedUser.avatar})`;\n      closeModal(evt.target.closest(\".popup\"));\n    })\n    .catch((err) => {\n      console.error(`Ошибка при обновлении аватара: ${err}`);\n    })\n    .finally(() => {\n      submitButton.textContent = originalButtonText;\n      submitButton.disabled = false;\n      clearValidation(evt.target, validationConfig);\n    });\n}\n\n// Функция для настройки обработчиков событий\nfunction setupEventListeners() {\n  newCardAddButton.addEventListener(\"click\", () => {\n    newCardForm.reset();\n    clearValidation(newCardForm, validationConfig);\n    openModal(newCardForm.closest(\".popup\"));\n  });\n\n  profileEditButton.addEventListener(\"click\", () => {\n    const nameInput = editProfileForm.querySelector(\".popup__input_type_name\");\n    const jobInput = editProfileForm.querySelector(\n      \".popup__input_type_description\"\n    );\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n    clearValidation(editProfileForm, validationConfig);\n    openModal(editProfileForm.closest(\".popup\"));\n  });\n\n  avatarEditButton.addEventListener(\"click\", () => {\n    avatarEditForm.reset();\n    clearValidation(avatarEditForm, validationConfig);\n    openModal(avatarEditForm.closest(\".popup\"));\n  });\n\n  document.addEventListener(\"click\", (event) => {\n    if (\n      event.target.classList.contains(\"popup_opened\") ||\n      event.target.classList.contains(\"popup__close\")\n    ) {\n      closeModal(event.target.closest(\".popup\"));\n    }\n  });\n\n  editProfileForm.addEventListener(\"submit\", handleProfileFormSubmit);\n  newCardForm.addEventListener(\"submit\", handleNewCardFormSubmit);\n  avatarEditForm.addEventListener(\"submit\", handleAvatarFormSubmit);\n}\n\n// Функция для отрисовки карточек\nfunction renderCards(cards) {\n  cards.forEach((cardData) => {\n    const cardElement = createCardElement(cardData);\n    placesList.appendChild(cardElement);\n  });\n}\n\n// Функция создания карточки\nfunction createCardElement(cardData) {\n  return createCard(\n    cardData,\n    handleDeleteCard,\n    handleLikeCard,\n    handleImageClick,\n    currentUserId\n  );\n}\n\n// Инициализация приложения\nfunction initializeApp() {\n  document.querySelectorAll(\".popup\").forEach((popup) => {\n    popup.classList.add(\"popup_is-animated\");\n  });\n\n  setupEventListeners();\n  enableValidation(validationConfig);\n\n  Promise.all([getUserInfo(), getInitialCards()])\n    .then(([userData, cards]) => {\n      currentUserId = userData._id;\n      profileTitle.textContent = userData.name;\n      profileDescription.textContent = userData.about;\n      profileAvatar.src = userData.avatar;\n      renderCards(cards);\n    })\n    .catch((err) => {\n      console.error(`Ошибка при инициализации приложения: ${err}`);\n    });\n}\n\n// Запуск инициализации после загрузки DOM\ndocument.addEventListener(\"DOMContentLoaded\", initializeApp);\n","// card.js\n\nfunction createCard(\n  cardData,\n  deleteCallback,\n  likeCallback,\n  imageClickCallback,\n  userId\n) {\n  const cardTemplate = document.querySelector(\"#card-template\").content;\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCounter = cardElement.querySelector(\".card__like-counter\");\n\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  cardTitle.textContent = cardData.name;\n  likeCounter.textContent = cardData.likes.length;\n\n  if (cardData.owner._id !== userId) {\n    deleteButton.remove();\n  } else {\n    deleteButton.addEventListener(\"click\", () =>\n      deleteCallback(cardElement, cardData._id)\n    );\n  }\n\n  likeButton.classList.toggle(\n    \"card__like-button_is-active\",\n    cardData.likes.some((like) => like._id === userId)\n  );\n  likeButton.addEventListener(\"click\", () =>\n    likeCallback(cardElement, cardData._id)\n  );\n  cardImage.addEventListener(\"click\", () => imageClickCallback(cardData));\n\n  return cardElement;\n}\n\nexport { createCard };\n"],"names":["openModal","modal","classList","add","document","addEventListener","handleEscKey","closeModal","remove","removeEventListener","event","key","openedPopup","querySelector","hideInputError","formElement","inputElement","config","errorElement","concat","name","inputErrorClass","errorClass","textContent","declOfNum","number","words","toggleButtonState","inputList","buttonElement","isFormValid","every","validity","valid","toggle","inactiveButtonClass","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","baseUrl","headers","authorization","addLike","cardId","fetch","method","then","res","ok","json","Promise","reject","status","removeLike","currentUserId","placesList","editProfileForm","newCardForm","profileEditButton","newCardAddButton","profileTitle","profileDescription","imagePopup","imageElement","captionElement","deleteConfirmPopup","avatarEditButton","avatarEditForm","profileAvatar","validationConfig","formSelector","handleImageClick","cardData","src","link","alt","handleProfileFormSubmit","evt","preventDefault","about","nameInput","jobInput","submitButton","originalButtonText","value","body","JSON","stringify","updatedUser","target","closest","catch","err","console","error","finally","handleNewCardFormSubmit","linkInput","newCardData","newCard","createCardElement","prepend","reset","handleDeleteCard","cardElement","confirmButton","cancelButton","deleteCardApi","once","handleLikeCard","likeButton","likeCounter","contains","updatedCard","likes","length","handleAvatarFormSubmit","avatarLink","avatar","style","backgroundImage","deleteCallback","likeCallback","imageClickCallback","userId","content","cloneNode","cardImage","cardTitle","deleteButton","owner","_id","some","like","createCard","popup","errorMessage","valueMissing","typeMismatch","type","tooShort","word","minLength","tooLong","maxLength","patternMismatch","validationMessage","showInputError","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","userData","cards","appendChild","renderCards"],"sourceRoot":""}